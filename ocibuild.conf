runnerTag: latest

name: oci-go-sdk
team: SDK
phoneBookId: software-development-kit
description: "This Builds and Tests the OCI GO SDK BitBucket Branches"

version: 1.1.${BLD_NUMBER}

printVerboseLogs: false

triggerOnCommitBranches: ["master", "preview", "pull-requests"]
releaseBranches: []

enableGit: true

# 'dex-build' compartment in 'dex-us-phoenix-1'
authCompartmentOcid: ocid1.compartment.oc1..aaaaaaaa2ttm66djhqpzww6vbx4cwd346wdhwc6h5od3rq5idzy7b3e4yyaq

# Build time variables
variables: {
      "TF_VAR_private_key_path": "/usr/src/app/tf_private_key.pem",
      "TF_VAR_compartment_id": "ocid1.compartment.oc1..aaaaaaaajysgrl7uthulky6bnjz4ckzpoaen3egpxydbtn22jz4woms7jvea",
      "TF_VAR_compartment_ocid": "ocid1.compartment.oc1..aaaaaaaajysgrl7uthulky6bnjz4ckzpoaen3egpxydbtn22jz4woms7jvea",
      "TF_VAR_fingerprint": "$(cat ./oci-sdk-cli-keys/go-sdk/resources/fingerprint.txt)",
      "TF_VAR_tenancy_ocid": "ocid1.tenancy.oc1..aaaaaaaa5nfwo53cezleyy6t73v6rn6knhu3molvptnl3kcq34l5zb7ptiaq",
      "TF_VAR_user_ocid": "ocid1.user.oc1..aaaaaaaalrxyqrm7fall2m6zsuex5xrhx5ljqt22o7a7rwa23kbs4defp33a",
      "TF_VAR_region": "us-phoenix-1",
      "TestSuite": "TestProvider",
      "DBG": "0",
      "SOURCE_DIR": "/usr/src/app/src/github.com/oracle/oci-go-sdk/",
      "TF_TEST_ARTIFACT": "oci-go-sdk-docker-test-internal",
      "TEST_ARTIFACT_VERSION": "73"
}

steps:
  [
    {
      # Clone sdk-cli keys from bitbucket, needed in testing phase
      name: clone-keys
      type: make
      makeCommands: [{ target: "build-clone-keys", args: "-f MakefileDevelopment.mk"  }]
      compartmentOcid: "ocid1.tenancy.oc1..aaaaaaaabugizl4jcpyqk6v3xyxds4p46raidyl3lrwonooegddmgckua6pq"
      secrets: [
        { envVarName: "BITBUCKET_READONLY_PRIVATEKEY", secretServicePath: "/secret/sdkdevopspipelines/bitbucket/readonly/privatekey/latest"},
        { envVarName: "BITBUCKET_READONLY_PASSPHRASE", secretServicePath: "/secret/sdkdevopspipelines/bitbucket/readonly/passphrase/latest"},
      ]
      artifacts:["**"]
    },
    {
      # Build and Run Go Integ Tests in Docker
      name: run-tests
      type: dockerizer
      dependsOn: clone-keys
      dockerFile: "./scripts/IntegTestsDocker"
      dockerBuildPwd: "./"
      artifacts: []
      dockerBuildArgs: {
      "TF_VAR_private_key_path": ${TF_VAR_private_key_path},
      "TF_VAR_compartment_id": ${TF_VAR_compartment_id},
      "TF_VAR_compartment_ocid": ${TF_VAR_compartment_ocid},
      "TF_VAR_fingerprint": ${TF_VAR_fingerprint},
      "TF_VAR_tenancy_ocid": ${TF_VAR_tenancy_ocid},
      "TF_VAR_user_ocid": ${TF_VAR_user_ocid},
      "TF_VAR_region": ${TF_VAR_region},
      "TestSuite": ${TestSuite},
      "DBG": ${DBG},
      "SOURCE_DIR": ${SOURCE_DIR},
      "TF_TEST_ARTIFACT": ${TF_TEST_ARTIFACT},
      "TEST_ARTIFACT_VERSION": ${TEST_ARTIFACT_VERSION}
      }
    },
    {
      # Run SCA scanner Job in docker 
      name: run-sca-job
      type: dockerizer
      dockerFile: "./scripts/SCAJobDocker"
      dockerBuildPwd: "./"
      artifacts: []
      environment: {
      "RUNNER_PROXY": "www-proxy-hqdc.us.oracle.com:80"
      "HTTPS_PROXY": "www-proxy-hqdc.us.oracle.com:80"
      "HTTP_PROXY": "www-proxy-hqdc.us.oracle.com:80"
      "NO_PROXY": ".oraclecorp.com"
      "https_proxy": "www-proxy-hqdc.us.oracle.com:80"
      "http_proxy": "www-proxy-hqdc.us.oracle.com:80"
      "no_proxy": ".oraclecorp.com"
      "GOROOT": "/usr/local/go" 
      "GOPATH": "/usr/src/app"
      "EXCLUSIONS": ".git/,vendor/"
      "EXCEPTIONS_FLAG": "true"
      }
    },
  ]